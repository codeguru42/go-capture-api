Parameters:
  Repository:
    Type: String

Resources:
  GithubRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GithubRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GithubOidc
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${Repository}:*
      Path: /gocapture/
      Policies:
        - PolicyName: CloudFormationPolicy
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  cloudformation:CreateChangeSet,
                  cloudformation:CreateStack,
                  cloudformation:DeleteChangeSet,
                  cloudformation:DescribeChangeSet,
                  cloudformation:DescribeStacks,
                  cloudformation:ExecuteChangeSet,
                ],
                "Resource": "*"
              }
            ]
          }
        - PolicyName: IamPolicy
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  iam:CreateRole,
                  iam:CreateUser,
                  iam:DeleteRole,
                  iam:DeleteUser,
                  iam:DeleteUserPolicy,
                  iam:GetRole,
                  iam:GetUser,
                  iam:ListAccessKeys,
                  iam:PutRolePolicy,
                  iam:PutRoleRole,
                  iam:PutUserPolicy,
                  iam:UpdateAssumeRolePolicy,
                ],
                "Resource": "*"
              }
            ]
          }
        - PolicyName: EcrPolicy
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  ecr:BatchCheckLayerAvailability,
                  ecr:BatchGetImage,
                  ecr:CompleteLayerUpload,
                  ecr:CreateRepository,
                  ecr:DescribeRepositories,
                  ecr:GetAuthorizationToken,
                  ecr:GetDownloadUrlForLayer,
                  ecr:GetRepositoryPolicy,
                  ecr:InitiateLayerUpload,
                  ecr:ListTagsForResource,
                  ecr:PutImage,
                  ecr:PutImageScanningConfiguration,
                  ecr:PutLifecyclePolicy,
                  ecr:UploadLayerPart
                ],
                "Resource": "*"
              }
            ]
          }
        - PolicyName: EcsPolicy
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ecs:CreateCluster",
                  "ecs:CreateService",
                  "ecs:DeleteCluster",
                  "ecs:DeregisterTaskDefinition",
                  "ecs:DescribeClusters",
                  "ecs:DescribeServices",
                  "ecs:RegisterTaskDefinition",
                  "iam:AttachRolePolicy",
                  "iam:DetachRolePolicy",
                  "iam:PassRole"
                ],
                "Resource": "*"
              }
            ]
          }
        - PolicyName: Ec2Policy
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateSubnet",
                  "ec2:CreateTags",
                  "ec2:CreateVpc",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteSubnet",
                  "ec2:DeleteVpc",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeVpcs",
                  "ec2:ModifyVpcAttribute"
                ],
                "Resource": "*"
              }
            ]
          }

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1

Outputs:
  Role:
    Value: !GetAtt GithubRole.Arn
