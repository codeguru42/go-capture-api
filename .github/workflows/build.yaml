name: Build
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::200049542062:role/gocapture/GithubRole
          aws-region: us-west-1

      - name: Deploy Github Role
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: GoCaptureGithubRole
          template: cloud-formation/github-role.yaml
          parameter-overrides: "Repository=${{ github.repository }}"
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: 1

      - name: Beta Deploy User
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: GoCaptureBetaDeployUser
          template: cloud-formation/beta-deploy-user.yaml
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: 1

      - name: Deploy ECR repository
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: GoCaptureECR
          template: cloud-formation/ecr.yaml
          no-fail-on-empty-changeset: 1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: go-capture
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
