name: Build
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: black
        uses: psf/black@stable

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::200049542062:role/gocapture/GithubRole
          aws-region: us-west-1

      - name: Set ECR Stack Name
        id: ecr-stack-name
        run: echo ECR_STACK_NAME=GoCaptureECR >> $GITHUB_OUTPUT

      - name: Deploy ECR repository
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ steps.ecr-stack-name.outputs.ECR_STACK_NAME }}
          template: cloud-formation/ecr.yaml
          no-fail-on-empty-changeset: 1

      - name: Beta Deploy User
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: GoCaptureBetaDeployUser
          template: cloud-formation/beta-deploy-user.yaml
          parameter-overrides: EcrStackName=${{ steps.ecr-stack-name.outputs.ECR_STACK_NAME }}
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: 1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: go-capture
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          if [ $BRANCH_NAME = main ]
          then
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          fi
